name: Create, test, and publish a Docker image

on:
  push:
    branches:
      - '**'          # Run on every push to any branch
    tags:
      - 'v*'          # Run on every push to tags that start with 'v'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-image:
    name: Build multi-platform Docker image
    runs-on: ubuntu-latest

    outputs:
      image-tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          load: true  # Load the built image into Docker's local cache
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test-image:
    name: Test Docker image
    runs-on: ubuntu-latest
    needs: build-image  # Run after build-image job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Docker container for testing
        run: |
          docker run -d -p 8080:8080 --name test_container ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build-image.outputs.image-tags }}
          sleep 2  # Wait for 2 seconds to allow the server to start

      - name: Test health endpoint
        run: |
          status_code=$(curl -o /dev/null -s -w "%{http_code}" http://localhost:8080/health)
          if [ "$status_code" -ne 200 ]; then
            echo "Health check failed with status code $status_code"
            exit 1
          fi
          echo "Health check passed with status code $status_code"

      - name: Stop and remove Docker container
        run: |
          docker stop test_container
          docker rm test_container

  publish-image:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs: test-image  # Run only after test-image job completes successfully
    if: startsWith(github.ref, 'refs/tags/v')  # Only run if a tag starting with 'v' is pushed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true  # Push the image in this step
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
